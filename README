Forewords
=========

This tutorial takes you a roller coaster in order for you to have some
insight of Scala language usage, sbt build system, and akka -- one of
the most popular frameworks built in Scala.

This tutorial assumes the audience to have no knowledge and experience
of the Java/Scala world but some basics of other worlds -- e.g. C, C++,
Python, or whatever. I just wanted to record and share my self-taught-y
way to learn Scala with "framework first for the first learning" mind.

The target platform is GNU/Linux. Therefore, for the installation step,
extra efforts may be required depending on your environment. Since
I am currently running Arch, simply pacman is used.

Also note that there is no IDE-specific instructions: No Eclipse or
IntelliJ, just sbt (I don't find reasons to take efforts for learning
any IDE which I am not sure to use beyond this tutorial).


Installation
============

There seems no need to separately install the language Scala since the
build tool sbt itself is capable of installing and running different
versions of sbt and scala.

Of course sbt requires Java 8


$ sudo pacman -S jdk8-openjdk sbt


sbt Tutorial
============

Before trying the Akka tutorial, at least I must learn how to use the
build tool, namely sbt. So this time I visit the official sbt webpage
and take the tutorial (scala-sbt.org/1.x/docs/Getting-Started.html).


Hello, tutorial
---------------


$ sbt new sbt/scala-seed.g8
# If it is your first time to launch sbt, it will take a very long time
# to set up, but not again.

A minimal Scala project.

name [Scala Seed Project]: tutorial

Template applied in ./tutorial

$ cd tutorial
$ sbt
sbt:Hello> run  # must success
sbt:Hello> test  # must success
sbt:Hello> exit
$


Below are sbt commands used frequently:
* run
* runMain
* test
* compile
* console
* reload
* clean
* help <command>

The sbt documentation is quite heavy (even for the getting started
section) and it seems beyond my level. I terminate this tutorial at the
end of "1.g. Scopes", heading for a dive on Akka.


Akka Quickstart with Scala
==========================

I arrive at the quickstart guide for Akka.
(developer.lightbend.com/guides/akka-quickstart-scala/)

Here it supplies the source code for the example as a zipped file to be
downloaded. As I get that and unzip, I found that the example source
contains sbt, which does not look good for me to experience sbt on my
machine. Therefore I continue to work with my previous sbt project for
"Hello World".

I create two `quickstart` directories for `src/main` and `src/test` to
write the code.


Main class
----------

I write companions for `Painter` and `Greeter`, and the main `App`,
reading through the Quickstart guide, from the beginning to the section
"Full Example Code".

* If you are curious of what is the companion object, please check
"Basics" and "Basic continued" sections from "Scala Shool" provided
by Twitter (twitter.github.io/scala_school)

Then sbt detects the currently existing two main classes.


$ sbt
sbt:Hello> run
[warn] Multiple main classes detected.  Run 'show discoveredMainClasses' to see the list

Multiple main classes detected, select one to run:

 [1] example.Hello
 [2] quickstart.AkkaQuickstart

Enter number: 2

[info] Running quickstart.AkkaQuickstart
[debug] Waiting for threads to exit or System.exit to be called.
[debug]   Classpath:
[debug]         /tmp/sbt_33688d6b/job-1/target/8392faf4/hello_2.12-0.1.0-SNAPSHOT.jar
[debug]         /tmp/sbt_33688d6b/target/f2e496f2/scala-library.jar
[debug]         /tmp/sbt_33688d6b/target/b6dc6f63/akka-actor_2.12-2.5.9.jar
[debug]         /tmp/sbt_33688d6b/target/d6ac0ce0/config-1.3.2.jar
[debug]         /tmp/sbt_33688d6b/target/1e6f1e74/scala-java8-compat_2.12-0.8.0.jar
[debug] Waiting for thread run-main-0 to terminate.
[debug]         Thread run-main-0 exited.
[debug] Waiting for thread helloAkka-akka.actor.default-dispatcher-5 to terminate.
[INFO] [02/15/2018 21:01:03.631] [helloAkka-akka.actor.default-dispatcher-5] [akka://helloAkka/user/printerActor] Greeting received (from Actor[akka://helloAkka/user/helloGreeter#-1074357650]): Hello, Scala
[INFO] [02/15/2018 21:01:03.631] [helloAkka-akka.actor.default-dispatcher-5] [akka://helloAkka/user/printerActor] Greeting received (from Actor[akka://helloAkka/user/howdyGreeter#-1725949786]): Howdy, Akka
[INFO] [02/15/2018 21:01:03.632] [helloAkka-akka.actor.default-dispatcher-5] [akka://helloAkka/user/printerActor] Greeting received (from Actor[akka://helloAkka/user/goodDayGreeter#637219822]): Good day, Play
[INFO] [02/15/2018 21:01:03.632] [helloAkka-akka.actor.default-dispatcher-5] [akka://helloAkka/user/printerActor] Greeting received (from Actor[akka://helloAkka/user/howdyGreeter#-1725949786]): Howdy, Lightbend


I can choose the main class to run by


sbt:Hello> runMain quickstart.AkkaQuickstart


I am not sure (and probably do not think) that this is a good way to
maintain a serious Scala project, but it is good for the tutorial
objective.


Test class
----------

Moving on to the test, I write the code on the section "Testing Actors".
Let's run the test.


$ sbt
sbt:Hello> test
[info] Compiling 1 Scala source to tutorial/target/scala-2.12/classes ...
[info] Done compiling.
[info] Compiling 1 Scala source to tutorial/target/scala-2.12/test-classes ...
[warn] there was one feature warning; re-run with -feature for details
[warn] one warning found
[info] Done compiling.
[info] HelloSpec:
[info] The Hello object
[info] - should say hello
[info] AkkaQuickstartSpec:
[info] A Greeter Actor
[info] - should pass on a greeting message when instructed to
[info] Run completed in 1 second, 166 milliseconds.
[info] Total number of tests run: 2
[info] Suites: completed 2, aborted 0
[info] Tests: succeeded 2, failed 0, canceled 0, ignored 0, pending 0
[info] All tests passed.
[success] Total time: 7 s, completed Feb 15, 2018 9:47:35 PM


I find it testing two different project simultaneously. For testing only
what I want to, `testOnly` is there.


sbt:Hello> testOnly quickstart.AkkaQuickstartSpec
[info] AkkaQuickstartSpec:
[info] A Greeter Actor
[info] - should pass on a greeting message when instructed to
[info] Run completed in 589 milliseconds.
[info] Total number of tests run: 1
[info] Suites: completed 1, aborted 0
[info] Tests: succeeded 1, failed 0, canceled 0, ignored 0, pending 0
[info] All tests passed.
[success] Total time: 1 s, completed Feb 15, 2018 9:49:18 PM


* The section "Testing with Specs" from the Twitter Scala School may be
worth reading.


Akka Tutorial: IoT Example use case
===================================

Now let's dive into the more serious example.
(doc.akka.io/docs/akka/current/guide/tutorial.html)


Part 1. Actor Architecture
--------------------------

This part explains how the actor system constructs the actor
architecture and shows the actors' references via the lifecycle hooks of
the actors. Also it tells me how the system deals with the actor
failures.

Yes, everything is done through messages.

Since this part has nothing to do with the IoT example, I continue to
add the code to the previous example directory `quickstart`.

1-1. Actor Architecture

sbt:Hello> runMain quickstart.ActorHierarchyExperiment1
[info] Running quickstart.ActorHierarchyExperiment1
First: Actor[akka://testSystem/user/first-actor#-1174065550]
>>> Press ENTER to exit <<<
Second: Actor[akka://testSystem/user/first-actor/second-actor#-1246452098]
[success] Total time: 28 s, completed Feb 16, 2018 4:39:25 PM


1-2. Actor lifecycle

sbt:Hello> runMain quickstart.ActorHierarchyExperiment2
[info] Running quickstart.ActorHierarchyExperiment2
>>> Press ENTER to exit <<<
first started
second started
second stopped
first stopped
[success] Total time: 53 s, completed Feb 16, 2018 4:50:51 PM

1-3. Failure handling

sbt:Hello> runMain quickstart.ActorHierarchyExperiment3
[info] Running quickstart.ActorHierarchyExperiment3
>>> Press ENTER to exit <<<
supervised actor started
supervised actor fails now
supervised actor stopped
[ERROR] [02/16/2018 17:02:20.570] [testSystem-akka.actor.default-dispatcher-3] [akka://testSystem/user/supervising-actor/supervised-actor] I failed!
java.lang.Exception: I failed!
        at quickstart.SupervisedActor$$anonfun$receive$4.applyOrElse(ExperimentalActors.scala:49)
        at akka.actor.Actor.aroundReceive(Actor.scala:517)
        at akka.actor.Actor.aroundReceive$(Actor.scala:515)
        at quickstart.SupervisedActor.aroundReceive(ExperimentalActors.scala:42)
        at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527)
        at akka.actor.ActorCell.invoke(ActorCell.scala:496)
        at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)
        at akka.dispatch.Mailbox.run(Mailbox.scala:224)
        at akka.dispatch.Mailbox.exec(Mailbox.scala:234)
        at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
        at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
        at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
        at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)

supervised actor started
[success] Total time: 6 s, completed Feb 16, 2018 5:02:26 PM

This example shows the auto-restarting strategy of the actor system.


Part 2. Creating the First Actor
--------------------------------

The IoT example begins and I will have a single top-level actor in a
brand-new `tutorial` directory.

sbt:IoT> runMain tutorial.IotApp
[info] Running tutorial.IotApp
[INFO] [02/16/2018 17:23:05.947] [iot-system-akka.actor.default-dispatcher-2] [akka://iot-system/user/iot-supervisor] IoT Application started
[INFO] [02/16/2018 17:23:27.984] [iot-system-akka.actor.default-dispatcher-3] [akka://iot-system/user/iot-supervisor] IoT Application stopped
[success] Total time: 23 s, completed Feb 16, 2018 5:23:28 PM


Part 3. Working with Device Actors
----------------------------------

This part tells me why Akka chooses "at-most-once delivery", leaving the
guarantee of delivery to the application itself, i.e., to me.

Also the first test suite for the IoT app is provided. Since the
tutorial doc does not fully address the test code (Although the github
reference uses `AkkaSpec` for testing, it currently seems deprecated), I
visit the github repository[1] and the documentation on testing[2].

[1] github.com/akka/akka/blob/master/akka-docs/src/test/scala/tutorial_3/DeviceSpec.scala
[2] doc.akka.io/docs/akka/current/testing.html

* What is `Option`?
twitter.github.io/scala_school/collections.html#Option


sbt:IoT> testOnly tutorial.DeviceSpec
[INFO] [02/17/2018 13:11:32.988] [part3system-akka.actor.default-dispatcher-2] [akka://part3system/user/$a] Device actor group-device started
[INFO] [02/17/2018 13:11:33.022] [part3system-akka.actor.default-dispatcher-4] [akka://part3system/user/$b] Device actor groups-device started
[INFO] [02/17/2018 13:11:33.023] [part3system-akka.actor.default-dispatcher-4] [akka://part3system/user/$b] Recorded temperature reading 24.0 with 1
[INFO] [02/17/2018 13:11:33.026] [part3system-akka.actor.default-dispatcher-2] [akka://part3system/user/$b] Recorded temperature reading 55.0 with 3
[INFO] [02/17/2018 13:11:33.047] [part3system-akka.actor.default-dispatcher-2] [akka://part3system/user/$a] Device actor group-device stopped
[INFO] [02/17/2018 13:11:33.047] [part3system-akka.actor.default-dispatcher-3] [akka://part3system/user/$b] Device actor groups-device stopped
[info] DeviceSpec:
[info] Device actor
[info] - must reply with empty reading if no temperature is known
[info] - must reply with latest temperature reading
[info] Run completed in 639 milliseconds.
[info] Total number of tests run: 2
[info] Suites: completed 1, aborted 0
[info] Tests: succeeded 2, failed 0, canceled 0, ignored 0, pending 0
[info] All tests passed.
[success] Total time: 3 s, completed Feb 17, 2018 1:11:33 PM


Part 4. Working with Device Groups
----------------------------------

This part shows the following types of converation patterns:
1. Request-respond (for temperature recordings)
2. Delegate-respond (for registration of devices)
3. Create-watch-terminate (for creating the group and device actors as
                           children)

Since the example code on the documentation does not fully reveal
itself, I decide to run through the documentation and write the code
(for source and test) at once.

* `!` and `tell`
doc.akka.io/docs/akka/current/actors.html#send-messages
doc.akka.io/api/akka/current/akka/actor/ActorRef.html
* `Map` and `Set`
twitter.github.io/scala_school/collections.html
* Pattern matching with backticks
stackoverflow.com/questions/6576594


sbt:IoT> testOnly tutorial.DeviceSpec
[INFO] [02/17/2018 16:39:14.450] [part3system-akka.actor.default-dispatcher-2] [akka://part3system/user/$a] Device actor group-device started
[INFO] [02/17/2018 16:39:14.477] [part3system-akka.actor.default-dispatcher-2] [akka://part3system/user/$b] Device actor groups-device started
[INFO] [02/17/2018 16:39:14.478] [part3system-akka.actor.default-dispatcher-2] [akka://part3system/user/$b] Recorded temperature reading 24.0 with 1
[INFO] [02/17/2018 16:39:14.480] [part3system-akka.actor.default-dispatcher-2] [akka://part3system/user/$b] Recorded temperature reading 55.0 with 3
[INFO] [02/17/2018 16:39:14.494] [part3system-akka.actor.default-dispatcher-5] [akka://part3system/user/$c] Device actor group-device started
[INFO] [02/17/2018 16:39:14.508] [part3system-akka.actor.default-dispatcher-2] [akka://part3system/user/$d] Device actor group-device started
[WARN] [02/17/2018 16:39:14.512] [part3system-akka.actor.default-dispatcher-2] [akka://part3system/user/$d] Ignoring TrackDevice request for wrongGroup-device. This actor is responsible for group-device
[WARN] [02/17/2018 16:39:15.009] [part3system-akka.actor.default-dispatcher-5] [akka://part3system/user/$d] Ignoring TrackDevice request for group-wrongDevice. This actor is responsible for group-device
G[INFO] [02/17/2018 16:39:15.565] [part3system-akka.actor.default-dispatcher-5] [akka://part3system/user/$a] Device actor group-device stopped
[INFO] [02/17/2018 16:39:15.565] [part3system-akka.actor.default-dispatcher-4] [akka://part3system/user/$c] Device actor group-device stopped
[INFO] [02/17/2018 16:39:15.565] [part3system-akka.actor.default-dispatcher-3] [akka://part3system/user/$b] Device actor groups-device stopped
[INFO] [02/17/2018 16:39:15.566] [part3system-akka.actor.default-dispatcher-6] [akka://part3system/user/$d] Device actor group-device stopped
[info] DeviceSpec:
[info] Device actor
[info] - must reply with empty reading if no temperature is known
[info] - must reply with latest temperature reading
[info] - must reply to registration requests
[info] - must ignore wrong registration requesets
[info] Run completed in 1 second, 644 milliseconds.
[info] Total number of tests run: 4
[info] Suites: completed 1, aborted 0
[info] Tests: succeeded 4, failed 0, canceled 0, ignored 0, pending 0
[info] All tests passed.
[success] Total time: 2 s, completed Feb 17, 2018 4:39:15 PM


sbt:IoT> testOnly tutorial.DeviceGroupSpec
[INFO] [02/17/2018 16:40:09.077] [part4system-akka.actor.default-dispatcher-5] [akka://part4system/user/$a] DeviceGroup group started
[INFO] [02/17/2018 16:40:09.078] [part4system-akka.actor.default-dispatcher-5] [akka://part4system/user/$a] Creating device actor for device1
[INFO] [02/17/2018 16:40:09.080] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$a/device-device1] Device actor group-device1 started
[INFO] [02/17/2018 16:40:09.084] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$a] Creating device actor for device2
[INFO] [02/17/2018 16:40:09.084] [part4system-akka.actor.default-dispatcher-3] [akka://part4system/user/$a/device-device2] Device actor group-device2 started
[INFO] [02/17/2018 16:40:09.108] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$b] DeviceGroup groups started
[WARN] [02/17/2018 16:40:09.109] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$b] Ignoring TrackDevice request for wrongGroup. This actor is responsible for groups.
[INFO] [02/17/2018 16:40:09.629] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$c] DeviceGroup group started
[INFO] [02/17/2018 16:40:09.630] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$c] Creating device actor for device
[INFO] [02/17/2018 16:40:09.632] [part4system-akka.actor.default-dispatcher-5] [akka://part4system/user/$c/device-device] Device actor group-device started
[INFO] [02/17/2018 16:40:09.652] [part4system-akka.actor.default-dispatcher-3] [akka://part4system/user/$d] DeviceGroup group started
[INFO] [02/17/2018 16:40:09.652] [part4system-akka.actor.default-dispatcher-3] [akka://part4system/user/$d] Creating device actor for device1
[INFO] [02/17/2018 16:40:09.653] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$d/device-device1] Device actor group-device1 started
[INFO] [02/17/2018 16:40:09.653] [part4system-akka.actor.default-dispatcher-3] [akka://part4system/user/$d] Creating device actor for device2
[INFO] [02/17/2018 16:40:09.655] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$d/device-device2] Device actor group-device2 started
[INFO] [02/17/2018 16:40:09.670] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$e] DeviceGroup group started
[INFO] [02/17/2018 16:40:09.670] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$e] Creating device actor for device1
[INFO] [02/17/2018 16:40:09.670] [part4system-akka.actor.default-dispatcher-5] [akka://part4system/user/$e/device-device1] Device actor group-device1 started
[INFO] [02/17/2018 16:40:09.671] [part4system-akka.actor.default-dispatcher-5] [akka://part4system/user/$e] Creating device actor for device2
[INFO] [02/17/2018 16:40:09.671] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$e/device-device2] Device actor group-device2 started
[INFO] [02/17/2018 16:40:09.677] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$e/device-device1] Device actor group-device1 stopped
[INFO] [02/17/2018 16:40:09.686] [part4system-akka.actor.default-dispatcher-5] [akka://part4system/user/$e] Device actor for device1 has been terminated
[INFO] [02/17/2018 16:40:09.698] [part4system-akka.actor.default-dispatcher-2] [akka://part4system/user/$b] DeviceGroup groups stopped
[INFO] [02/17/2018 16:40:09.700] [part4system-akka.actor.default-dispatcher-3] [akka://part4system/user/$a/device-device2] Device actor group-device2 stopped
[INFO] [02/17/2018 16:40:09.700] [part4system-akka.actor.default-dispatcher-5] [akka://part4system/user/$a/device-device1] Device actor group-device1 stopped
[INFO] [02/17/2018 16:40:09.702] [part4system-akka.actor.default-dispatcher-3] [akka://part4system/user/$a] DeviceGroup group stopped
[INFO] [02/17/2018 16:40:09.702] [part4system-akka.actor.default-dispatcher-6] [akka://part4system/user/$c/device-device] Device actor group-device stopped
[INFO] [02/17/2018 16:40:09.703] [part4system-akka.actor.default-dispatcher-5] [akka://part4system/user/$c] DeviceGroup group stopped
[INFO] [02/17/2018 16:40:09.704] [part4system-akka.actor.default-dispatcher-11] [akka://part4system/user/$d/device-device1] Device actor group-device1 stopped
[INFO] [02/17/2018 16:40:09.704] [part4system-akka.actor.default-dispatcher-4] [akka://part4system/user/$e/device-device2] Device actor group-device2 stopped
[INFO] [02/17/2018 16:40:09.704] [part4system-akka.actor.default-dispatcher-6] [akka://part4system/user/$d/device-device2] Device actor group-device2 stopped
[INFO] [02/17/2018 16:40:09.704] [part4system-akka.actor.default-dispatcher-11] [akka://part4system/user/$d] DeviceGroup group stopped
[INFO] [02/17/2018 16:40:09.704] [part4system-akka.actor.default-dispatcher-7] [akka://part4system/user/$e] DeviceGroup group stopped
[info] DeviceGroupSpec:
[info] DeviceGroup actor
[info] - must be able to register a device actor
[info] - must ignore requests in wrong groupId
[info] - must return same actor for same deviceId
[info] - must be able to list active devices
[info] - must be able to list active devices after one shuts down
[info] Run completed in 1 second, 89 milliseconds.
[info] Total number of tests run: 5
[info] Suites: completed 1, aborted 0
[info] Tests: succeeded 5, failed 0, canceled 0, ignored 0, pending 0
[info] All tests passed.
[success] Total time: 1 s, completed Feb 17, 2018 4:40:09 PM
